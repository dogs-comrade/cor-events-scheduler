name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}
  NAMESPACE: events-scheduler

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run tests
      run: go test -v ./...

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/events-scheduler:${{ github.sha }}
          ${{ env.DOCKER_REGISTRY }}/events-scheduler:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Create namespace if not exists
      run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -

    - name: Update Kubernetes secrets
      run: |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: Secret
        metadata:
          name: events-scheduler-secrets
          namespace: ${{ env.NAMESPACE }}
        type: Opaque
        data:
          db_user: ${{ secrets.DB_USER_BASE64 }}
          db_password: ${{ secrets.DB_PASSWORD_BASE64 }}
        EOF

    - name: Deploy application
      run: |
        # Update image tag in deployment
        kubectl set image deployment/events-scheduler \
          events-scheduler=${{ env.DOCKER_REGISTRY }}/events-scheduler:${{ github.sha }} \
          -n ${{ env.NAMESPACE }}

        # Wait for rollout to complete
        kubectl rollout status deployment/events-scheduler -n ${{ env.NAMESPACE }} --timeout=300s

    - name: Verify deployment
      run: |
        kubectl get pods -n ${{ env.NAMESPACE }} -l app=events-scheduler